(()=>{async function e(){if(!function(){const e=window.location.href.toLowerCase(),t=document.title.toLowerCase(),o=document.body.innerText.toLowerCase();return["order details","order summary","order information","order number","invoice","purchase details","order id","order date","order total","your order","order confirmation","order placed","order status"].some(r=>e.includes(r)||t.includes(r)||o.includes(r))}())return void console.log("Not an order details page. Skipping extraction.");console.log("Starting order extraction...");const e=function(){const e=document.createTreeWalker(document.body,NodeFilter.SHOW_TEXT,{acceptNode:function(e){const t=e.parentElement;if(!t)return NodeFilter.FILTER_REJECT;const o=window.getComputedStyle(t);return"none"===o.display||"hidden"===o.visibility||"0"===o.opacity?NodeFilter.FILTER_REJECT:e.textContent.trim()?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_REJECT}});let t,o="";for(;t=e.nextNode();)o+=t.textContent+" ";return o}(),t=(document.body.innerHTML,function(e){const t={orderId:[/order\s*(?:id|number|#)\s*:?\s*([A-Z0-9\-]{10,})/gi,/(?:order|invoice)\s*#?\s*([0-9\-]{10,})/gi,/([0-9]{3}-[0-9]{7}-[0-9]{7})/g],productName:[/<title>([^|]+)/i,/product\s*name\s*:?\s*([^\n]+)/gi,/item\s*:?\s*([^\n]+)/gi],price:[/₹\s*([0-9,]+\.?[0-9]*)/g,/total\s*:?\s*₹?\s*([0-9,]+\.?[0-9]*)/gi,/amount\s*:?\s*₹?\s*([0-9,]+\.?[0-9]*)/gi],brand:[/brand\s*:?\s*([A-Za-z\s]+)/gi,/by\s+([A-Z][a-z]+(?:\s+[A-Z][a-z]+)*)/g],orderDate:[/order\s*(?:placed|date)\s*:?\s*(\d{1,2}[\/\-]\d{1,2}[\/\-]\d{2,4})/gi,/placed\s*on\s*:?\s*(\d{1,2}\s+\w+\s+\d{4})/gi],deliveryDate:[/delivered\s*(?:on)?\s*:?\s*(\d{1,2}[\/\-]\d{1,2}[\/\-]\d{2,4})/gi,/delivery\s*date\s*:?\s*(\d{1,2}\s+\w+\s+\d{4})/gi]},o={};for(const[r,n]of Object.entries(t))for(const t of n){const n=e.match(t);if(n&&n.length>0){let i=n[0];if(t.source.includes("(")){const o=t.exec(e);o&&o[1]&&(i=o[1].trim())}o[r]=i;break}}return o}(e+" "+document.title)),o=function(){const e={};return Object.entries({orderId:['[data-testid*="order"]','[class*="order-id"]','[id*="order"]','span:contains("Order")','div:contains("Order #")'],productName:['h1[data-automation-id="product-title"]',"h1#productTitle",".product-title","h1, h2, h3"],price:[".a-price-whole",'[class*="price"]',".total-price",".amount"],brand:['[data-automation-id="brand-name"]',".brand",".manufacturer"]}).forEach(([t,o])=>{for(const r of o)try{let o;if(r.includes(":contains(")){const e=r.match(/:contains\("([^"]+)"\)/)?.[1];e&&(o=Array.from(document.querySelectorAll(r.split(":")[0])).find(t=>t.textContent.includes(e)))}else o=document.querySelector(r);if(o&&o.textContent.trim()){e[t]=o.textContent.trim();break}}catch(e){continue}}),e}(),r={detectedSite:window.location.hostname,orderDetailsPageUrl:window.location.href,orderId:o.orderId||t.orderId||"",productName:o.productName||t.productName||document.title.split("|")[0].trim(),brand:o.brand||t.brand||"",price:o.price||t.price||"",orderDate:t.orderDate||"",deliveryDate:t.deliveryDate||"",sellerName:t.sellerName||"",trackingNumber:t.trackingNumber||"",productImage:"",productCategory:""},n=Array.from(document.images).filter(e=>e.width>100&&e.height>100&&!e.src.includes("logo")&&!e.src.includes("icon"));n.length>0&&(r.productImage=n[0].src),r.productCategory=function(e){if(!e)return"Others";const t=e.toLowerCase(),o={Electronics:["phone","laptop","tablet","headphone","speaker","camera","tv"],Clothing:["shirt","t-shirt","dress","jean","trouser","jacket"],Footwear:["shoe","sandal","sneaker","boot"],"Home & Kitchen":["appliance","cookware","furniture"],Beauty:["makeup","skincare","perfume","cosmetic"],Books:["book","novel","textbook"]};for(const[e,r]of Object.entries(o))if(r.some(e=>t.includes(e)))return e;return"Others"}(r.productName),console.log("Extraction completed:",r);try{chrome.storage.local.set({autoComplaintOrderUniversal:r}),console.log("Data saved to storage")}catch(e){console.error("Failed to save to storage:",e)}return r}` tags. The edited snippet appears to be a complete replacement for the original file, focusing on simplifying the extraction process and removing the AI model dependencies to address bundle size issues. The approach will now use regex and DOM extraction methods instead.

```,replit_final_file,console.log("AutoComplaint: Enhanced order extraction loaded"),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",e):e();let t=window.location.href;new MutationObserver(()=>{window.location.href!==t&&(t=window.location.href,setTimeout(e,1e3))}).observe(document.body,{childList:!0,subtree:!0})})();