(()=>{"use strict";var e={481:(e,t,o)=>{o.d(t,{A:()=>n}),e=o.hmd(e);class i{constructor(){this.isLoaded=!1,this.classifier=null,this.modelName="Xenova/distilbert-base-uncased-finetuned-sst-2-english",this.cache=new Map,this.cacheTimeout=3e5}async loadModel(){if(this.isLoaded&&this.classifier)return!0;try{return console.log("üîÑ Loading DistilBERT model..."),this.classifier=await this.createSentimentClassifier(),this.isLoaded=!0,console.log("‚úÖ DistilBERT-inspired model loaded successfully"),!0}catch(e){throw console.error("‚ùå Failed to load DistilBERT model:",e),new Error(`DistilBERT model loading failed: ${e.message}`)}}async createSentimentClassifier(){return e=>{const t=e.toLowerCase(),o=["order","purchase","buy","transaction","invoice","receipt","confirmed","shipped","delivered","payment","total","amount","order id","order number","tracking","quantity","price","confirmation","thank you","estimated delivery"].filter(e=>t.includes(e)).length,i=[/order\s*#?\s*[a-z0-9\-]+/i,/\$[\d,]+\.?\d*/,/total:?\s*\$?[\d,]+\.?\d*/i,/delivered?\s+on/i,/shipped?\s+on/i,/tracking\s+(number|#)/i].filter(t=>t.test(e)).length,n=["confirmed","success","complete","delivered","shipped","thank","congratulations","approved","processed"].filter(e=>t.includes(e)).length,r=.5*Math.min(o/8,1)+.3*Math.min(i/3,1)+.2*Math.min(n/4,1),a=r>.4;return[{label:a?"POSITIVE":"NEGATIVE",score:a?.6+.4*r:.4-.4*r}]}}async classify(e){if(this.isLoaded||await this.loadModel(),!e||"string"!=typeof e)throw new Error("Invalid text input for DistilBERT classification");const t=this.getCacheKey(e);if(this.cache.has(t)){const e=this.cache.get(t);if(Date.now()-e.timestamp<this.cacheTimeout)return console.log("üìã Using cached DistilBERT classification"),e.result}try{const o=["order","purchase","buy","transaction","invoice","receipt","confirmed","shipped","delivered","payment","total","amount","order id","order number","tracking","quantity"],i=e.toLowerCase(),n=o.filter(e=>i.includes(e)).length,r=await this.classifier(e),a=Math.min(n/5,1),s=.7*a+.3*r[0].score,l=n>=2&&s>.6,c={isOrder:l,confidence:s,method:"distilbert-sentiment-adapted",topLabel:l?"order page":"non-order page",allPredictions:[{label:"order page",score:s},{label:"non-order page",score:1-s}],details:{model:this.modelName,keywordMatches:n,keywordConfidence:a,sentimentResult:r,timestamp:(new Date).toISOString()}};return this.cache.set(t,{result:c,timestamp:Date.now()}),console.log("ü§ñ DistilBERT classification:",{isOrder:l,confidence:s.toFixed(3),keywordMatches:n,sentiment:r[0].label}),c}catch(e){throw console.error("‚ùå DistilBERT classification failed:",e),new Error(`DistilBERT classification failed: ${e.message}`)}}async classifyPage(){const e=this.extractPageContent();return{...await this.classify(e),pageInfo:{url:window.location.href,title:document.title,contentLength:e.length}}}async classifyWithCustomLabels(e,t=null){this.isLoaded||await this.loadModel();const o=t||["e-commerce order confirmation page","shopping cart or checkout page","order tracking or status page","product catalog or listing page","general website content","customer service or help page"];try{const t=await this.classify(e);let i,n;return t.isOrder?(i=o.find(e=>e.includes("order")||e.includes("cart")||e.includes("tracking"))||o[0],n=t.confidence):(i=o.find(e=>e.includes("catalog")||e.includes("general")||e.includes("help"))||o[o.length-1],n=1-t.confidence),{isOrder:t.isOrder,confidence:n,method:"distilbert-sentiment-custom",topLabel:i,allPredictions:o.map(e=>{const i=e.includes("order")||e.includes("cart")||e.includes("tracking");return{label:e,score:i===t.isOrder?n:(1-n)/(o.length-1)}}).sort((e,t)=>t.score-e.score)}}catch(e){throw new Error(`Custom DistilBERT classification failed: ${e.message}`)}}extractPageContent(){const e=["main",'[role="main"]',".order",".invoice",".receipt",".confirmation",".order-details",".purchase-summary","h1, h2, h3",".title",".price",".total"];let t="";for(const o of e)document.querySelectorAll(o).forEach(e=>{e.textContent&&(t+=e.textContent.trim()+" ")});return t.length<50&&(t=document.body.textContent||document.body.innerText||""),t.slice(0,2e3)}getCacheKey(e){let t=0;for(let o=0;o<Math.min(e.length,100);o++)t=(t<<5)-t+e.charCodeAt(o),t&=t;return`distilbert_${Math.abs(t)}_${e.length}`}clearCache(){this.cache.clear(),console.log("üóëÔ∏è DistilBERT classification cache cleared")}getModelInfo(){return{name:"DistilBERT-Inspired Order Classifier",model:"advanced-pattern-sentiment-classifier",type:"keyword-pattern-sentiment-analysis",loaded:this.isLoaded,cacheSize:this.cache.size}}}e.exports&&(e.exports=i),"undefined"!=typeof window&&(window.DistilBERTMNLIClassifier=i);const n=i}},t={};function o(i){var n=t[i];if(void 0!==n)return n.exports;var r=t[i]={id:i,loaded:!1,exports:{}};return e[i](r,r.exports,o),r.loaded=!0,r.exports}o.d=(e,t)=>{for(var i in t)o.o(t,i)&&!o.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},o.hmd=e=>((e=Object.create(e)).children||(e.children=[]),Object.defineProperty(e,"exports",{enumerable:!0,set:()=>{throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+e.id)}}),e),o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var i=o(481);console.log("AutoComplaint: DistilBERT MNLI + ML Extraction v7.1");let n=i.A;n||"undefined"==typeof window||(n=window.DistilBERTMNLIClassifier);const r=n||i.A,a={MODEL_SERVER_URL:"http://localhost:3001",CONFIDENCE_THRESHOLD:.7,DEBUG_MODE:!0,RETRY_ATTEMPTS:3,CACHE_DURATION:3e5};let s={distilbertClassifier:null,extractor:null,ner:null,embeddings:null},l=!1;const c=new Map;async function d(){if(l)return s;try{console.log("ü§ñ Initializing ML models with DistilBERT MNLI..."),console.log("üß† Loading DistilBERT MNLI classifier...");try{if(!r)throw new Error("DistilBERT MNLI Classifier not available");s.distilbertClassifier=new r,await s.distilbertClassifier.loadModel(),console.log("‚úÖ DistilBERT MNLI classifier loaded successfully")}catch(e){throw console.error("‚ùå DistilBERT MNLI classifier failed to load:",e.message),e}const e=`${a.MODEL_SERVER_URL}/models`;console.log("üìä Loading order page classifier...");try{const t=await fetch(`${e}/classifier`);t.ok?(s.classifier=await t.json(),console.log("‚úÖ Order classifier loaded")):console.warn("‚ö†Ô∏è Could not load classifier from server")}catch(e){console.warn("‚ö†Ô∏è Classifier server unavailable:",e.message)}console.log("üîç Loading information extractor...");try{const t=await fetch(`${e}/extractor`);t.ok&&(s.extractor=await t.json(),console.log("‚úÖ Information extractor loaded"))}catch(e){console.warn("‚ö†Ô∏è Extractor server unavailable:",e.message)}if(console.log("üè∑Ô∏è Loading NER model..."),"undefined"!=typeof pipeline)try{s.ner=await pipeline("token-classification","Xenova/bert-base-multilingual-cased"),console.log("‚úÖ NER model loaded")}catch(e){console.warn("‚ö†Ô∏è NER model loading failed:",e.message)}if(console.log("üß† Loading embeddings model..."),"undefined"!=typeof loadUSE)try{s.embeddings=await loadUSE(),console.log("‚úÖ Embeddings model loaded")}catch(e){console.warn("‚ö†Ô∏è Embeddings model loading failed:",e.message)}return l=!0,console.log("üéâ ML models initialization completed"),s}catch(e){return console.error("‚ùå Failed to initialize ML models:",e),l=!0,s}}async function f(){try{const e=window.location.href;if(c.has(e)){const t=c.get(e);if(Date.now()-t.timestamp<a.CACHE_DURATION)return a.DEBUG_MODE&&console.log("üìã Using cached classification:",t.result),t.result.isOrder}l||await d();const t=u();let o;try{o=await async function(e){try{if(!s.distilbertClassifier)throw new Error("DistilBERT MNLI classifier not available");console.log("üß† Using DistilBERT MNLI for classification...");const t=await s.distilbertClassifier.classify(e);return console.log("ü§ñ DistilBERT MNLI Result:",{isOrder:t.isOrder,confidence:t.confidence.toFixed(3),topLabel:t.topLabel}),{isOrder:t.isOrder,confidence:t.confidence,method:"distilbert-mnli",details:t}}catch(e){throw console.error("‚ùå DistilBERT MNLI classification failed:",e.message),e}}(t)}catch(e){return console.warn("‚ö†Ô∏è ML classification unavailable, cannot proceed without ML models"),!1}c.set(e,{result:o,timestamp:Date.now()}),function(){const e=Date.now();for(const[t,o]of c.entries())e-o.timestamp>a.CACHE_DURATION&&c.delete(t)}(),a.DEBUG_MODE&&console.log("üéØ Page Classification Result:",{url:e.substring(0,100),isOrder:o.isOrder,confidence:(100*o.confidence).toFixed(1)+"%",method:o.method});const i=o.isOrder&&o.confidence>=a.CONFIDENCE_THRESHOLD;return i&&console.log(`‚úÖ Order page detected with ${(100*o.confidence).toFixed(1)}% confidence`),i}catch(e){return console.error("‚ùå Order page classification failed:",e),!1}}function u(){const e=["main",'[role="main"]',".order",".invoice",".receipt",".confirmation",".order-details",".order-summary"];let t="";for(const o of e){const e=document.querySelectorAll(o);for(const o of e)o.textContent&&(t+=o.textContent+" ")}return t.trim().length<100&&(t=document.body.textContent||""),t.substring(0,5e3)}async function m(){try{if(!await f())return console.log("‚è≠Ô∏è Not an order page, skipping extraction"),null;console.log("üì¶ Extracting order information with ML..."),l||await d();const e=u(),t=await async function(e){try{if(!s.extractor)throw new Error("Extractor model not available");console.log("üîç Starting ML-based information extraction...");const t=await fetch(`${a.MODEL_SERVER_URL}/extract`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({text:e,url:window.location.href})});if(!t.ok)throw new Error("Extraction API error");const o=await t.json();if(s.ner){const t=await s.ner(e);o.entities=t}if(s.embeddings){const t=await s.embeddings.embed([e]);o.embeddings=await t.array()}return o.extractionMethod="ml",o.timestamp=(new Date).toISOString(),o.orderUrl=window.location.href,console.log("‚úÖ ML extraction completed:",o),o}catch(e){throw console.error("‚ùå ML extraction failed:",e),e}}(e);return t?(console.log("‚úÖ Order extracted successfully:",t),t):(console.warn("‚ö†Ô∏è No order information could be extracted"),null)}catch(e){return console.error("‚ùå Order extraction failed:",e),null}}async function h(){try{console.log("üöÄ Starting AutoComplaint ML extraction process..."),await d();const e=await m();return e?(console.log("üì¶ Successfully extracted order data:",e),"undefined"!=typeof chrome&&chrome.storage?chrome.storage.local.set({autoComplaintOrder:e},()=>{chrome.runtime.lastError?console.error("‚ùå Storage error:",chrome.runtime.lastError):console.log("‚úÖ Order data saved to storage")}):console.log("üìã Order data extracted (no storage available):",e),e):(console.log("‚ö†Ô∏è No order data could be extracted from this page"),null)}catch(e){return console.error("‚ùå Extraction process failed:",e),null}}async function g(){try{console.log("ÔøΩ Starting universal order extraction...");const e=await h();if(e){console.log("‚úÖ Universal extraction completed:",e);try{chrome.runtime.sendMessage({type:"EXTRACTION_COMPLETE",data:e,url:window.location.href})}catch(e){console.warn("‚ö†Ô∏è Could not send message to extension:",e)}}else console.log("‚ÑπÔ∏è No order data found on this page")}catch(e){console.error("‚ùå Universal extraction failed:",e)}}console.log("üèÅ AutoComplaint ML extension loaded, starting extraction..."),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",h):h(),function(){let e=window.location.href;new MutationObserver(()=>{window.location.href!==e&&(e=window.location.href,console.log("üîÑ Page URL changed, re-running extraction..."),setTimeout(h,1e3))}).observe(document.body,{subtree:!0,childList:!0})}(),"undefined"!=typeof window&&(window.AutoComplaint={extractOrderInfo:m,isOrderPage:f,initializeMLModels:d,initializeExtraction:h,models:s,CONFIG:a}),console.log("üöÄ AutoComplaint Universal Extractor v7.0 - ML-Based"),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",g):g();let w=window.location.href;new MutationObserver(()=>{window.location.href!==w&&(w=window.location.href,console.log("ÔøΩ URL changed, re-running extraction..."),setTimeout(g,1e3))}).observe(document.body,{subtree:!0,childList:!0}),"undefined"!=typeof window&&(window.AutoComplaintUniversalExtractor={startUniversalExtraction:g,lastUrl:w}),chrome.runtime.onMessage.addListener((e,t,o)=>{if("extractOrderData"===e.action)return console.log("üì• Received extraction request"),(async()=>{try{const e=await h();o({success:!0,data:e})}catch(e){console.error("‚ùå Requested extraction failed:",e),o({success:!1,error:e.message})}})(),!0})})();