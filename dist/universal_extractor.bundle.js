(()=>{"use strict";console.log("AutoComplaint: ML-Based Order Extraction v7.0");const e={MODEL_SERVER_URL:"http://localhost:3001",CONFIDENCE_THRESHOLD:.7,DEBUG_MODE:!0,RETRY_ATTEMPTS:3,CACHE_DURATION:3e5};let o={classifier:null,extractor:null,ner:null,embeddings:null},t=!1;const n=new Map;async function r(){if(t)return o;try{console.log("ü§ñ Initializing ML models...");const n=`${e.MODEL_SERVER_URL}/models`;console.log("üìä Loading order page classifier...");try{const e=await fetch(`${n}/classifier`);e.ok?(o.classifier=await e.json(),console.log("‚úÖ Order classifier loaded")):console.warn("‚ö†Ô∏è Could not load classifier from server")}catch(e){console.warn("‚ö†Ô∏è Classifier server unavailable:",e.message)}console.log("üîç Loading information extractor...");try{const e=await fetch(`${n}/extractor`);e.ok&&(o.extractor=await e.json(),console.log("‚úÖ Information extractor loaded"))}catch(e){console.warn("‚ö†Ô∏è Extractor server unavailable:",e.message)}if(console.log("üè∑Ô∏è Loading NER model..."),"undefined"!=typeof pipeline)try{o.ner=await pipeline("token-classification","Xenova/bert-base-multilingual-cased"),console.log("‚úÖ NER model loaded")}catch(e){console.warn("‚ö†Ô∏è NER model loading failed:",e.message)}if(console.log("üß† Loading embeddings model..."),"undefined"!=typeof loadUSE)try{o.embeddings=await loadUSE(),console.log("‚úÖ Embeddings model loaded")}catch(e){console.warn("‚ö†Ô∏è Embeddings model loading failed:",e.message)}return t=!0,console.log("üéâ ML models initialization completed"),o}catch(e){return console.error("‚ùå Failed to initialize ML models:",e),t=!0,o}}async function a(){try{const a=window.location.href;if(n.has(a)){const o=n.get(a);if(Date.now()-o.timestamp<e.CACHE_DURATION)return e.DEBUG_MODE&&console.log("üìã Using cached classification:",o.result),o.result.isOrder}t||await r();const c=i();let s;try{s=await async function(t){try{if(!o.classifier)throw new Error("Classifier model not available");const n=await fetch(`${e.MODEL_SERVER_URL}/classify`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({text:t})});if(!n.ok)throw new Error("Classification API error");const r=await n.json();return{isOrder:"order"===r.prediction,confidence:r.confidence,method:"ml"}}catch(e){throw console.warn("‚ö†Ô∏è ML classification failed:",e.message),e}}(c)}catch(e){return console.warn("‚ö†Ô∏è ML classification unavailable, cannot proceed without ML models"),!1}n.set(a,{result:s,timestamp:Date.now()}),function(){const o=Date.now();for(const[t,r]of n.entries())o-r.timestamp>e.CACHE_DURATION&&n.delete(t)}(),e.DEBUG_MODE&&console.log("üéØ Page Classification Result:",{url:a.substring(0,100),isOrder:s.isOrder,confidence:(100*s.confidence).toFixed(1)+"%",method:s.method});const l=s.isOrder&&s.confidence>=e.CONFIDENCE_THRESHOLD;return l&&console.log(`‚úÖ Order page detected with ${(100*s.confidence).toFixed(1)}% confidence`),l}catch(e){return console.error("‚ùå Order page classification failed:",e),!1}}function i(){const e=["main",'[role="main"]',".order",".invoice",".receipt",".confirmation",".order-details",".order-summary"];let o="";for(const t of e){const e=document.querySelectorAll(t);for(const t of e)t.textContent&&(o+=t.textContent+" ")}return o.trim().length<100&&(o=document.body.textContent||""),o.substring(0,5e3)}async function c(){try{if(!await a())return console.log("‚è≠Ô∏è Not an order page, skipping extraction"),null;console.log("üì¶ Extracting order information with ML..."),t||await r();const n=i(),c=await async function(t){try{if(!o.extractor)throw new Error("Extractor model not available");console.log("üîç Starting ML-based information extraction...");const n=await fetch(`${e.MODEL_SERVER_URL}/extract`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({text:t,url:window.location.href})});if(!n.ok)throw new Error("Extraction API error");const r=await n.json();if(o.ner){const e=await o.ner(t);r.entities=e}if(o.embeddings){const e=await o.embeddings.embed([t]);r.embeddings=await e.array()}return r.extractionMethod="ml",r.timestamp=(new Date).toISOString(),r.orderUrl=window.location.href,console.log("‚úÖ ML extraction completed:",r),r}catch(e){throw console.error("‚ùå ML extraction failed:",e),e}}(n);return c?(console.log("‚úÖ Order extracted successfully:",c),c):(console.warn("‚ö†Ô∏è No order information could be extracted"),null)}catch(e){return console.error("‚ùå Order extraction failed:",e),null}}async function s(){try{console.log("üöÄ Starting AutoComplaint ML extraction process..."),await r();const e=await c();return e?(console.log("üì¶ Successfully extracted order data:",e),"undefined"!=typeof chrome&&chrome.storage?chrome.storage.local.set({autoComplaintOrder:e},()=>{chrome.runtime.lastError?console.error("‚ùå Storage error:",chrome.runtime.lastError):console.log("‚úÖ Order data saved to storage")}):console.log("üìã Order data extracted (no storage available):",e),e):(console.log("‚ö†Ô∏è No order data could be extracted from this page"),null)}catch(e){return console.error("‚ùå Extraction process failed:",e),null}}async function l(){try{console.log("ÔøΩ Starting universal order extraction...");const e=await s();if(e){console.log("‚úÖ Universal extraction completed:",e);try{chrome.runtime.sendMessage({type:"EXTRACTION_COMPLETE",data:e,url:window.location.href})}catch(e){console.warn("‚ö†Ô∏è Could not send message to extension:",e)}}else console.log("‚ÑπÔ∏è No order data found on this page")}catch(e){console.error("‚ùå Universal extraction failed:",e)}}console.log("üèÅ AutoComplaint ML extension loaded, starting extraction..."),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",s):s(),function(){let e=window.location.href;new MutationObserver(()=>{window.location.href!==e&&(e=window.location.href,console.log("üîÑ Page URL changed, re-running extraction..."),setTimeout(s,1e3))}).observe(document.body,{subtree:!0,childList:!0})}(),"undefined"!=typeof window&&(window.AutoComplaint={extractOrderInfo:c,isOrderPage:a,initializeMLModels:r,initializeExtraction:s,models:o,CONFIG:e}),console.log("üöÄ AutoComplaint Universal Extractor v7.0 - ML-Based"),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",l):l();let d=window.location.href;new MutationObserver(()=>{window.location.href!==d&&(d=window.location.href,console.log("ÔøΩ URL changed, re-running extraction..."),setTimeout(l,1e3))}).observe(document.body,{subtree:!0,childList:!0}),"undefined"!=typeof window&&(window.AutoComplaintUniversalExtractor={startUniversalExtraction:l,lastUrl:d}),chrome.runtime.onMessage.addListener((e,o,t)=>{if("extractOrderData"===e.action)return console.log("üì• Received extraction request"),(async()=>{try{const e=await s();t({success:!0,data:e})}catch(e){console.error("‚ùå Requested extraction failed:",e),t({success:!1,error:e.message})}})(),!0})})();